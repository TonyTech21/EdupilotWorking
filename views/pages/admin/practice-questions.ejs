<%- include('../../partials/header') %>

<div class="page-content">
    <div class="page-header">
        <h1>Manage Practice Questions</h1>
        <a href="/admin/post-practice-question" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add New Question
        </a>
    </div>
    
    <% if (locals.query && query.success) { %>
        <div class="alert alert-success">
            <i class="fas fa-check-circle"></i>
            <%= query.success %>
        </div>
    <% } %>
    
    <% if (locals.query && query.error) { %>
        <div class="alert alert-error">
            <i class="fas fa-exclamation-triangle"></i>
            <%= query.error %>
        </div>
    <% } %>
    
    <div class="filters">
        <form method="GET" action="/admin/practice-questions" class="filter-form">
            <div class="filter-group">
                <label for="class">Class:</label>
                <select name="class" id="class">
                    <option value="">All Classes</option>
                    <% classes.forEach(className => { %>
                        <option value="<%= className %>" <%= query.class === className ? 'selected' : '' %>>
                            <%= className %>
                        </option>
                    <% }) %>
                </select>
            </div>
            
            <div class="filter-group">
                <label for="subject">Subject:</label>
                <select name="subject" id="subject">
                    <option value="">All Subjects</option>
                    <% subjects.forEach(subject => { %>
                        <option value="<%= subject %>" <%= query.subject === subject ? 'selected' : '' %>>
                            <%= subject %>
                        </option>
                    <% }) %>
                </select>
            </div>
            
            <button type="submit" class="btn btn-secondary" style="background-color: #1e293b;">Filter</button>
            <a href="/admin/practice-questions" class="btn btn-outline" style="border: 2px solid #1e293b; color: #1e293b; height: 40px;">Clear</a>
        </form>
    </div>
    
    <div class="questions-grid">
        <% if (questions && questions.length > 0) { %>
            <% questions.forEach(question => { %>
                <div class="question-card">
                    <div class="question-header">
                        <div class="question-meta">
                            <span class="class-badge"><%= question.targetClass %></span>
                            <span class="subject-badge"><%= question.subject %></span>
                            <span class="difficulty-badge difficulty-<%= question.difficulty.toLowerCase() %>">
                                <%= question.difficulty %>
                            </span>
                        </div>
                        <div class="question-actions">
                            <form method="POST" action="/admin/practice-questions/delete/<%= question._id %>" style="display: inline;" onsubmit="return confirm('Are you sure you want to delete this question?')">
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                    
                    <div class="question-content">
                        <h3 class="question-text"><%= question.question %></h3>
                        
                        <div class="options-list">
                            <% question.options.forEach((option, index) => { %>
                                <div class="option-item <%= option.isCorrect ? 'correct-option' : '' %>">
                                    <span class="option-letter"><%= String.fromCharCode(65 + index) %></span>
                                    <span class="option-text"><%= option.text %></span>
                                    <% if (option.isCorrect) { %>
                                        <i class="fas fa-check-circle correct-icon"></i>
                                    <% } %>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                    
                    <div class="question-footer">
                        <small class="created-info">
                            Created by <%= question.createdBy %> on <%= new Date(question.createdAt).toLocaleDateString() %>
                        </small>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <div class="no-questions">
                <div class="no-questions-icon">
                    <i class="fas fa-question-circle"></i>
                </div>
                <h3>No Practice Questions Found</h3>
                <p>Start by creating your first practice question for students.</p>
                <a href="/admin/post-practice-question" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create First Question
                </a>
            </div>
        <% } %>
    </div>
    
    <% if (totalPages > 1) { %>
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %><%= query ? '&' + new URLSearchParams(query).toString() : '' %>" class="btn btn-outline">
                    <i class="fas fa-chevron-left"></i> Previous
                </a>
            <% } %>
            
            <span class="page-info">
                Page <%= currentPage %> of <%= totalPages %>
            </span>
            
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %><%= query ? '&' + new URLSearchParams(query).toString() : '' %>" class="btn btn-outline">
                    Next <i class="fas fa-chevron-right"></i>
                </a>
            <% } %>
        </div>
    <% } %>
</div>

<style>
.questions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.question-card {
    background: white;
    border-radius: 1rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.question-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
}

.question-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    padding: 1.5rem 1.5rem 1rem;
    background: #f8fafc;
    border-bottom: 1px solid #e2e8f0;
}

.question-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.class-badge, .subject-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 500;
}

.class-badge {
    background: #dbeafe;
    color: #1e40af;
}

.subject-badge {
    background: #f0fdf4;
    color: #166534;
}

.difficulty-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 500;
}

.difficulty-easy {
    background: #d1fae5;
    color: #065f46;
}

.difficulty-medium {
    background: #fef3c7;
    color: #92400e;
}

.difficulty-hard {
    background: #fee2e2;
    color: #991b1b;
}

.question-content {
    padding: 1.5rem;
}

.question-text {
    color: #1e293b;
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    line-height: 1.6;
}

.options-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.option-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: #f9fafb;
    border-radius: 0.5rem;
    border: 1px solid #e5e7eb;
    transition: all 0.3s ease;
}

.option-item.correct-option {
    background: #f0fdf4;
    border-color: #10b981;
}

.option-letter {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    background: #1e293b;
    color: white;
    border-radius: 50%;
    font-size: 0.75rem;
    font-weight: bold;
    flex-shrink: 0;
}

.correct-option .option-letter {
    background: #10b981;
}

.option-text {
    flex: 1;
    color: #374151;
}

.correct-icon {
    color: #10b981;
    font-size: 1.1rem;
}

.question-footer {
    padding: 1rem 1.5rem;
    background: #f8fafc;
    border-top: 1px solid #e2e8f0;
}

.created-info {
    color: #6b7280;
    font-size: 0.875rem;
}

.no-questions {
    grid-column: 1 / -1;
    text-align: center;
    padding: 4rem 2rem;
    background: white;
    border-radius: 1rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
}

.no-questions-icon {
    font-size: 4rem;
    color: #cbd5e1;
    margin-bottom: 1.5rem;
}

.no-questions h3 {
    color: #1e293b;
    margin-bottom: 1rem;
}

.no-questions p {
    color: #6b7280;
    margin-bottom: 2rem;
}

@media (max-width: 768px) {
    .questions-grid {
        grid-template-columns: 1fr;
    }
    
    .question-header {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
    }
    
    .question-meta {
        width: 100%;
    }
}
</style>

<%- include('../../partials/footer') %>