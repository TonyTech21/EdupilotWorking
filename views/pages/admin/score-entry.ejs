<%- include('../../partials/header') %>

<div class="page-content">
    <div class="page-header">
        <h1>Score Entry</h1>
        <% if (activeSession) { %>
            <div class="session-info">
                <span class="session-badge">
                    <%= activeSession.sessionName %> - <%= activeSession.currentTerm %>
                </span>
            </div>
        <% } %>
    </div>
    
    <div class="result-entry-container">
        <div class="filters">
            <form method="GET" action="/admin/score-entry" class="filter-form">
                <div class="filter-group">
                    <label for="class">Class:</label>
                    <select id="class" name="class" required>
                        <option value="">Select Class</option>
                        <% classes.forEach(cls => { %>
                            <option value="<%= cls.className %>" <%= selectedClass === cls.className ? 'selected' : '' %>>
                                <%= cls.className %>
                            </option>
                        <% }) %>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="subject">Subject:</label>
                    <select id="subject" name="subject" required>
                        <option value="">Select Subject</option>
                        <% subjects.forEach(subject => { %>
                            <option value="<%= subject.subjectName %>" <%= selectedSubject === subject.subjectName ? 'selected' : '' %>>
                                <%= subject.subjectName %>
                            </option>
                        <% }) %>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="term">Term:</label>
                    <select id="term" name="term" required>
                        <option value="First Term" <%= selectedTerm === 'First Term' ? 'selected' : '' %>>First Term</option>
                        <option value="Second Term" <%= selectedTerm === 'Second Term' ? 'selected' : '' %>>Second Term</option>
                        <option value="Third Term" <%= selectedTerm === 'Third Term' ? 'selected' : '' %>>Third Term</option>
                    </select>
                </div>
                
                <button type="submit" class="btn btn-primary">Load Students</button>
            </form>
        </div>
        
        <% if (selectedClass && selectedSubject && students.length > 0) { %>
            <div class="result-form-container">
                <div class="result-header">
                    <h2><%= selectedClass %> - <%= selectedSubject %></h2>
                    <p><%= selectedTerm %>, <%= activeSession ? activeSession.sessionName : '' %></p>
                    <div class="grading-info">
                        <h4>Grading Scale:</h4>
                        <p><strong>CA1:</strong> 15 marks | <strong>CA2:</strong> 15 marks | <strong>Exam:</strong> 70 marks | <strong>Total:</strong> 100 marks</p>
                        <p><strong>Grades:</strong> A1(75-100) | B2(70-74) | B3(65-69) | C4(60-64) | C5(55-59) | C6(50-54) | D7(45-49) | E8(40-44) | F9(0-39)</p>
                    </div>
                </div>
                
                <form id="resultForm" class="result-form">
                    <input type="hidden" name="className" value="<%= selectedClass %>">
                    <input type="hidden" name="subject" value="<%= selectedSubject %>">
                    <input type="hidden" name="term" value="<%= selectedTerm %>">
                    <input type="hidden" name="session" value="<%= activeSession ? activeSession.sessionName : '' %>">
                    
                    <div class="table-container">
                        <table class="result-table">
                            <thead>
                                <tr>
                                    <th>S/N</th>
                                    <th>Student Name</th>
                                    <th>Student ID</th>
                                    <th>CA1 (15)</th>
                                    <th>CA2 (15)</th>
                                    <th>Exam (70)</th>
                                    <th>Total</th>
                                    <th>Grade</th>
                                    <th>Remark</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% students.forEach((student, index) => { %>
                                    <% 
                                        const existingResult = existingResults.find(r => r.studentID === student.studentID);
                                        const ca1 = existingResult ? existingResult.ca1 : 0;
                                        const ca2 = existingResult ? existingResult.ca2 : 0;
                                        const exam = existingResult ? existingResult.exam : 0;
                                        const total = ca1 + ca2 + exam;
                                        
                                        // New grading system
                                        let grade = 'F9';
                                        let remark = 'Fail';
                                        if (total >= 75) { grade = 'A1'; remark = 'Excellent'; }
                                        else if (total >= 70) { grade = 'B2'; remark = 'Very Good'; }
                                        else if (total >= 65) { grade = 'B3'; remark = 'Good'; }
                                        else if (total >= 60) { grade = 'C4'; remark = 'Credit'; }
                                        else if (total >= 55) { grade = 'C5'; remark = 'Credit'; }
                                        else if (total >= 50) { grade = 'C6'; remark = 'Credit'; }
                                        else if (total >= 45) { grade = 'D7'; remark = 'Pass'; }
                                        else if (total >= 40) { grade = 'E8'; remark = 'Pass'; }
                                    %>
                                    <tr>
                                        <td><%= index + 1 %></td>
                                        <td><%= student.fullName %></td>
                                        <td><%= student.studentID %></td>
                                        <td>
                                            <input type="number" name="ca1_<%= index %>" min="0" max="15" value="<%= ca1 %>" class="score-input" data-row="<%= index %>">
                                            <input type="hidden" name="studentID_<%= index %>" value="<%= student.studentID %>">
                                            <input type="hidden" name="studentName_<%= index %>" value="<%= student.fullName %>">
                                        </td>
                                        <td>
                                            <input type="number" name="ca2_<%= index %>" min="0" max="15" value="<%= ca2 %>" class="score-input" data-row="<%= index %>">
                                        </td>
                                        <td>
                                            <input type="number" name="exam_<%= index %>" min="0" max="70" value="<%= exam %>" class="score-input" data-row="<%= index %>">
                                        </td>
                                        <td>
                                            <span class="total-score" data-row="<%= index %>"><%= total %></span>
                                        </td>
                                        <td>
                                            <span class="grade-display" data-row="<%= index %>"><%= grade %></span>
                                        </td>
                                        <td>
                                            <span class="remark-display" data-row="<%= index %>"><%= remark %></span>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="form-actions">
                        <button type="button" id="saveResults" class="btn btn-secondary">
                            <i class="fas fa-save"></i> Save as Draft
                        </button>
                        <button type="button" id="sendResults" class="btn btn-primary">
                            <i class="fas fa-paper-plane"></i> Send for Approval
                        </button>
                        <button type="button" id="calculateAll" class="btn btn-outline">
                            <i class="fas fa-calculator"></i> Recalculate All
                        </button>
                    </div>
                </form>
            </div>
        <% } else if (selectedClass && selectedSubject) { %>
            <div class="no-students">
                <p>No students found in <%= selectedClass %></p>
            </div>
        <% } %>
    </div>
</div>

<style>
.grading-info {
    background: var(--light-gray);
    padding: 1rem;
    border-radius: 0.375rem;
    margin: 1rem 0;
    border-left: #1e293b 4px solid;
    border-right: #1e293b 4px solid;
}

.grading-info h4 {
    color: #1e293b;
    margin-bottom: 0.5rem;
}

.grading-info p {
    margin: 0.25rem 0;
    font-size: 0.9rem;
    color: var(--dark-gray);
}

.score-input {
    width: 70px;
    padding: 0.25rem;
    border: 1px solid var(--medium-gray);
    border-radius: 0.25rem;
    text-align: center;
}

.score-input:focus {
    outline: none;
    border-color: var(--primary-color);
}

.total-score,
.grade-display,
.remark-display {
    font-weight: bold;
    color: #1e293b;
}

.form-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid var(--medium-gray);
}
</style>

<script>
// Auto-calculate totals and grades with new grading system
document.addEventListener('DOMContentLoaded', function() {
    const scoreInputs = document.querySelectorAll('.score-input');
    const saveButton = document.getElementById('saveResults');
    const sendButton = document.getElementById('sendResults');
    const calculateAllButton = document.getElementById('calculateAll');
    const classSelect = document.getElementById('class');
    const subjectSelect = document.getElementById('subject');
    
    // Load subjects when class changes
    classSelect.addEventListener('change', function() {
        const className = this.value;
        subjectSelect.innerHTML = '<option value="">Select Subject</option>';
        
        if (className) {
            fetch(`/admin/api/classes/${encodeURIComponent(className)}/subjects`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        data.subjects.forEach(subject => {
                            const option = document.createElement('option');
                            option.value = subject.subjectName;
                            option.textContent = subject.subjectName;
                            subjectSelect.appendChild(option);
                        });
                    }
                })
                .catch(error => {
                    console.error('Error loading subjects:', error);
                });
        }
    });
    
    // Calculate total, grade, and remark for a specific row - NEW GRADING SYSTEM
    function calculateRow(rowIndex) {
        const ca1 = parseFloat(document.querySelector(`input[name="ca1_${rowIndex}"]`).value) || 0;
        const ca2 = parseFloat(document.querySelector(`input[name="ca2_${rowIndex}"]`).value) || 0;
        const exam = parseFloat(document.querySelector(`input[name="exam_${rowIndex}"]`).value) || 0;
        
        const total = ca1 + ca2 + exam;
        let grade = 'F9';
        let remark = 'Fail';
        
        // New grading system
        if (total >= 75) {
            grade = 'A1';
            remark = 'Excellent';
        } else if (total >= 70) {
            grade = 'B2';
            remark = 'Very Good';
        } else if (total >= 65) {
            grade = 'B3';
            remark = 'Good';
        } else if (total >= 60) {
            grade = 'C4';
            remark = 'Credit';
        } else if (total >= 55) {
            grade = 'C5';
            remark = 'Credit';
        } else if (total >= 50) {
            grade = 'C6';
            remark = 'Credit';
        } else if (total >= 45) {
            grade = 'D7';
            remark = 'Pass';
        } else if (total >= 40) {
            grade = 'E8';
            remark = 'Pass';
        }
        
        document.querySelector(`span[data-row="${rowIndex}"].total-score`).textContent = total;
        document.querySelector(`span[data-row="${rowIndex}"].grade-display`).textContent = grade;
        document.querySelector(`span[data-row="${rowIndex}"].remark-display`).textContent = remark;
    }
    
    // Add event listeners to score inputs
    scoreInputs.forEach(input => {
        input.addEventListener('input', function() {
            const rowIndex = this.dataset.row;
            calculateRow(rowIndex);
        });
    });
    
    // Calculate all rows
    if (calculateAllButton) {
        calculateAllButton.addEventListener('click', function() {
            const rows = document.querySelectorAll('.score-input[name*="ca1_"]');
            rows.forEach((input, index) => {
                calculateRow(index);
            });
        });
    }
    
    // Save results as draft
    if (saveButton) {
        saveButton.addEventListener('click', function() {
            saveResults('draft');
        });
    }
    
    // Send results for approval
    if (sendButton) {
        sendButton.addEventListener('click', function() {
            if (confirm('Are you sure you want to send these results for approval? You will not be able to edit them after sending.')) {
                sendResults();
            }
        });
    }
    
    function saveResults(action = 'save') {
        const formData = new FormData(document.getElementById('resultForm'));
        const results = [];
        
        // Collect all student results
        const studentIds = document.querySelectorAll('input[name*="studentID_"]');
        studentIds.forEach((input, index) => {
            const studentID = input.value;
            const studentName = document.querySelector(`input[name="studentName_${index}"]`).value;
            const ca1 = document.querySelector(`input[name="ca1_${index}"]`).value;
            const ca2 = document.querySelector(`input[name="ca2_${index}"]`).value;
            const exam = document.querySelector(`input[name="exam_${index}"]`).value;
            
            results.push({
                studentID,
                studentName,
                ca1: parseFloat(ca1) || 0,
                ca2: parseFloat(ca2) || 0,
                exam: parseFloat(exam) || 0
            });
        });
        
        // Send data to server
        fetch('/admin/score-entry/save', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                className: formData.get('className'),
                subject: formData.get('subject'),
                term: formData.get('term'),
                session: formData.get('session'),
                results: results
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showAlert(data.message, 'success');
            } else {
                showAlert('Error saving results: ' + data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showAlert('Error saving results', 'error');
        });
    }
    
    function sendResults() {
        const formData = new FormData(document.getElementById('resultForm'));
        
        // First save the results, then send them
        saveResults();
        
        // Wait a moment then send for approval
        setTimeout(() => {
            fetch('/admin/score-entry/send', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    className: formData.get('className'),
                    subject: formData.get('subject'),
                    term: formData.get('term'),
                    session: formData.get('session')
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert(data.message + '. Results are now available for approval.', 'success');
                    // Disable form after sending
                    document.querySelectorAll('.score-input').forEach(input => input.disabled = true);
                    sendButton.disabled = true;
                    saveButton.disabled = true;
                } else {
                    showAlert('Error sending results: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('Error sending results', 'error');
            });
        }, 1000);
    }
    
    function showAlert(message, type) {
        const alert = document.createElement('div');
        alert.className = `alert alert-${type}`;
        alert.innerHTML = `
            <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'}"></i>
            ${message}
        `;
        
        const pageContent = document.querySelector('.page-content');
        pageContent.insertBefore(alert, pageContent.firstChild);
        
        setTimeout(() => {
            alert.style.opacity = '0';
            setTimeout(() => alert.remove(), 300);
        }, 5000);
    }
});
</script>

<%- include('../../partials/footer') %>